#!/bin/bash
# Script, which is run before travis build.
# Installs some dependency, depending on on which OS travis is running.

# shellcheck source=./travis-share.sh
_dir="$( dirname "$0" )"
source "${_dir}/travis-share.sh"
unset _dir

function run_install {
    case "$TRAVIS_OS_NAME" in
        "linux")
            try_run 'sudo apt-get update'
            try_run 'sudo apt-get install -y
            build-essential
            libasound2-dev
            libpulse-dev
            portaudio19-dev
            libsdl2-dev'

            # Install latest `rclone` manually, because bionic's `rclone` is far out-of-date
            msg "Installing latest \`rclone\` using its install script"
            ( curl https://rclone.org/install.sh | sudo bash ) || \
                err "Couldn't install \`rclone\`"
            ;;

        "windows")
            check "choco"
            try_run 'choco install zip rclone'
            windows_install_sdl2_libs
            ;;

        "osx")
            check "brew"
            try_run 'brew update'
            try_run 'brew install SDL2 rclone'
            ;;

        *)
            err "Unrecognized OS $( colored "$COLOR_CODE" "$TRAVIS_OS_NAME" )"
            ;;
    esac
}

function windows_install_sdl2_libs {
    msg "Trying to download and install SDL2 MSVC development libraries"

    local TMP_DIR="tmp-libsdl2"
    local RUST_VERSION="1.38.0"
    local RUST_TOOLCHAIN="x86_64-pc-windows-msvc"
    local RUSTUP_LIB_DIR="${TRAVIS_HOME}/.rustup/toolchains/${RUST_VERSION}-${RUST_TOOLCHAIN}/lib/rustlib/${RUST_TOOLCHAIN}/lib"
    local LIBSDL2_VERSION="2.0.10"
    local LIBSDL2_URL="https://www.libsdl.org/release/SDL2-devel-${LIBSDL2_VERSION}-VC.zip"

    check_dir "$RUSTUP_LIB_DIR"
    mkdir "$TMP_DIR"

    pushd "$TMP_DIR"
    curl "$LIBSDL2_URL" > ./libsdl2.zip
    try_run "unzip libsdl2.zip"
    try_run "mv ./SDL2-${LIBSDL2_VERSION}/lib/x64/*.lib ${RUSTUP_LIB_DIR}"
    popd

    msg "Cleaning up downloaded SDL2 libraries"
    rm -rf "$TMP_DIR"
}

function notify_telegram {
    local message=
    message="$(
cat <<MSGEND
__Building release  
\`${TRAVIS_TAG}-${TRAVIS_OS_NAME}\`__  
[Job Log](${TRAVIS_JOB_WEB_URL})
MSGEND
)"
    send_telegram_message "$message"
}

notify_telegram
run_install
