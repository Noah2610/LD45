#!/bin/bash
# Script, which is run after a travis build.
# Uploads the built release to Google Drive
# using `gdrive` (https://github.com/gdrive-org/gdrive).

# shellcheck source=./travis-share.sh
_dir="$( dirname "$0" )"
source "${_dir}/travis-share.sh"
unset _dir

function upload_release {
    check "gdrive"
    [ -n "$GDRIVE_REFRESH_TOKEN" ] || \
        err "$( colored "$COLOR_CODE" "\$GDRIVE_REFRESH_TOKEN" ) must be set"
    [ -n "$GDRIVE_DIR_ID" ] || \
        err "$( colored "$COLOR_CODE" "\$GDRIVE_DIR_ID" ) must be set"

    local release_path
    release_path="$( get_release_path )"
    check_file "$release_path"

    local out
    local gdrive_file_id
    msg "Uploading release to Google Drive using \`$( colored "$COLOR_CODE" "gdrive" )\`"
    if out="$( gdrive upload                    \
        --refresh-token "$GDRIVE_REFRESH_TOKEN" \
        --parent "$GDRIVE_DIR_ID"               \
        --share                                 \
        "$release_path" )"
    then
        # gdrive_file_id="$( echo "$out" | cut -d "" )"
        notify_telegram_success "$out"
    else
        notify_telegram_failure "$out"
    fi
}

function notify_telegram_success {
    local gdrive_out="$1"

    local message=
    message="$(
cat <<MSGEND
__Successfully built release \`${TRAVIS_TAG}-${TRAVIS_OS_NAME}\`!__  
MSGEND
)"

    [ -n "$gdrive_out" ] && message="${message}  \n\`\`\`\n${gdrive_out}\n\`\`\`"

    send_telegram_message "$message"
}

function notify_telegram_failure {
    local message=
    message="$(
cat <<MSGEND
__Oh-oh!__ Something went wrong while uploading release \`${TRAVIS_TAG}-${TRAVIS_OS_NAME}\`!  
Check the [Job Log](${TRAVIS_JOB_WEB_URL})  
$1
MSGEND
)"
    send_telegram_message "$message"
}

upload_release
