#!/bin/bash
# Script, which is run after a travis build.
# Uploads the built release to Google Drive
# using `rclone` (https://github.com/rclone/rclone).

# shellcheck source=./travis-share.sh
_dir="$( dirname "$0" )"
source "${_dir}/travis-share.sh"
unset _dir

function upload_release {
    check "rclone"
    [ -n "$RCLONE_DRIVE_TOKEN" ] || \
        err "$( colored "$COLOR_CODE" "\$RCLONE_DRIVE_TOKEN" ) must be set"
    [ -n "$GDRIVE_DIR_ID" ] || \
        err "$( colored "$COLOR_CODE" "\$GDRIVE_DIR_ID" ) must be set"

    export RCLONE_CONFIG_DRIVE_TYPE="drive"
    export RCLONE_CONFIG_DRIVE_TOKEN="$RCLONE_DRIVE_TOKEN"
    export RCLONE_CONFIG_DRIVE_ROOT_FOLDER_ID="$GDRIVE_DIR_ID"

    local release_path
    release_path="$( get_release_path )"
    check_file "$release_path"

    local out
    msg "Uploading release to Google Drive using \`$( colored "$COLOR_CODE" "rclone" )\`"

    if out="$( 2>&1 rclone copy "$release_path" drive:/ )"; then
        notify_telegram_success
    else
        notify_telegram_failure "$out"
    fi
}

function notify_telegram_success {
    local message=
    local gdrive_dir_url="https://drive.google.com/drive/folders/${GDRIVE_DIR_ID}"
    message="$(
cat <<MSGEND
__Successfully built release
\`${TRAVIS_TAG}-${TRAVIS_OS_NAME}\`!__
[Google Drive Releases Folder](${gdrive_dir_url})"
MSGEND
)"
    send_telegram_message "$message"
    msg "$message"
}

function notify_telegram_failure {
    local out="$1"
    local message=
    message="$(
cat <<MSGEND
__Oh-oh!__ Something went wrong while uploading release
\`${TRAVIS_TAG}-${TRAVIS_OS_NAME}\`!
Check the [Job Log](${TRAVIS_JOB_WEB_URL})
\`\`\`
$out
\`\`\`
MSGEND
)"
    send_telegram_message "$message"
    err "$message"
}

upload_release
